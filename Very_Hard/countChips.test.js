const path = require("path");
const filePath = `./${path.basename(__filename).split(".")[0].toString()}.js`;
const file = require(`${filePath}`);

describe(__filename, () => {
  test.each`
    a | expected
    ${[
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0]
    ]} | ${0}
    ${[
      [1,1,0,0,0,0,0,0],
      [0,0,0,0,1,0,0,0],
      [0,0,0,0,1,0,1,1],
      [0,1,0,0,0,0,0,0],
      [0,1,0,0,0,0,0,0],
      [0,0,0,1,1,1,0,0],
      [0,0,0,0,0,0,0,1],
      [0,0,0,0,0,0,0,1]
    ]} | ${6}
    ${[
      [1,0,0,1,0,0,1,0],
      [0,0,0,0,0,0,0,0],
      [1,1,1,0,0,0,0,0],
      [0,0,0,0,1,1,0,0],
      [0,0,0,0,0,0,1,0],
      [0,0,0,1,0,0,1,0],
      [0,0,0,0,0,0,0,0],
      [1,0,0,0,0,1,1,1]
    ]} | ${9}
    ${[
      [1,0,0,0,0,0,1,0],
      [1,0,0,0,1,0,1,0],
      [0,0,0,0,1,0,0,0],
      [0,1,1,1,0,1,0,0],
      [0,0,0,0,0,1,0,0],
      [0,0,0,0,0,0,0,0],
      [1,1,1,0,1,1,1,1],
      [0,0,0,0,0,0,0,0],
      [0,0,1,1,1,0,1,0]
    ]} | ${9}
    ${[
      [1,0,1,0,1,0,1,0],
      [0,1,0,1,0,1,0,1],
      [1,0,1,0,1,0,1,0],
      [0,1,0,1,0,1,0,1],
      [1,0,1,0,1,0,1,0],
      [0,1,0,1,0,1,0,1],
      [1,0,1,0,1,0,1,0],
      [0,1,0,1,0,1,0,1]
    ]} | ${32}
    ${[
      [0,0,0,0,0,0,0,1],
      [0,1,0,0,0,0,0,1],
      [0,1,0,0,0,0,0,0],
      [0,1,0,0,1,1,1,0],
      [0,0,0,0,0,0,0,0],
      [0,0,0,0,1,0,0,0],
      [1,0,0,0,0,0,1,1],
      [1,0,1,1,0,1,0,0],
      [0,0,0,0,0,0,0,0]
    ]} | ${8}
    ${[
      [0,0,1,0,0,0,0,0],
      [0,0,1,0,0,1,1,0],
      [0,0,1,0,0,0,0,0],
      [0,0,1,0,0,0,0,0],
      [0,0,1,0,0,1,1,1],
      [0,0,0,0,0,0,0,0],
      [0,0,1,0,0,0,1,0],
      [0,0,0,0,0,0,1,0]
    ]} | ${5}
  `(
    "returns $expected when calling with the following param/s: a",
    ({ a, expected }) => {
      expect(file.solution(a)).toStrictEqual(expected);
    }
  );
});